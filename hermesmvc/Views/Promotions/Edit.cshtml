@model hermesmvc.Models.Promotion

@{
    /**/

    ViewBag.Title = "Edit";
}
@Styles.Render("~/bundles/jquerycss");
@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
$(document).ready(function() {

    $(".datepicker").datepicker({ showAnim: "slide", showButtonPanel: true });  

});
</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Promotion</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)






    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.promostatus_id, "PromoStatus", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("promostatus_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.promostatus_id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.customer_id, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("customer_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.customer_id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-1">
            @Html.LabelFor(model => model.week1, "Week1", htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.EditorFor(model => model.week1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.week1, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-1">
            @Html.LabelFor(model => model.week2, "Week2", htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.EditorFor(model => model.week2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.week2, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-1">
            @Html.LabelFor(model => model.week3, "Week3", htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.EditorFor(model => model.week3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.week3, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-1">
            @Html.LabelFor(model => model.week4, "Week4", htmlAttributes: new { @class = "control-label col-md-1" })
            @Html.EditorFor(model => model.week4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.week4, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.promotype_id, "PromoType", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("promotype_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.promotype_id, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.note, "Note", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })

        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.leaflet_fee, "Leaflet_fee", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.leaflet_fee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.leaflet_fee, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.secondaryplacement_fee, "2nd_placement", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.secondaryplacement_fee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.secondaryplacement_fee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.shipment_from, "Shipment_from", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.shipment_from, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.shipment_from, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.shipment_to, "Shipment_to", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.shipment_to, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.shipment_to, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.active_from, "Active_from", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.active_from, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.active_from, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2">
            @Html.LabelFor(model => model.active_to, "Active_to", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.active_to, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.active_to, "", new { @class = "text-danger" })
        </div>


    </div>


    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.promo_name, "PromoName", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.promo_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.promo_name, "", new { @class = "text-danger" })
        </div>


        <div class="col-md-3">
            @Html.LabelFor(model => model.edit_date, "Edit_date", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.edit_date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.edit_date, "", new { @class = "text-danger" })
        </div>
    </div>






</div>


<div class="form-horizontal">


    <hr />
    <h3>Products</h3>

    <table class="form-group">

        <tr align="right">
            <th align="left">
                @Html.Label("Product_name", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("Volume", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("Discount_On", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("Discount_Off", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("Casecount", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("GSV", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("NIV", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("NSV", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
            <th>
                @Html.Label("MMAC", htmlAttributes: new { @class = "control-label col-md-1" })
            </th>
        </tr>


        @for (int i = 0; i < Model.PromotionsDetails.Count(); i++)
    {
        @Html.HiddenFor(model => model.PromotionsDetails[i].id)
        @Html.HiddenFor(model => model.PromotionsDetails[i].promotion_id)
        @Html.HiddenFor(model => model.PromotionsDetails[i].product_id)
        <tr align="right">
            <td width="20%" align="left">
                @Html.DisplayFor(model => model.PromotionsDetails[i].Product.name, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td width="10%">
                @Html.EditorFor(model => model.PromotionsDetails[i].volume, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td width="10%">
                @Html.EditorFor(model => model.PromotionsDetails[i].discount_on, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td width="10%">
                @Html.EditorFor(model => model.PromotionsDetails[i].discount_off, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td width="10%">
                @Html.DisplayFor(model => model.PromotionsDetails[i].Product.casecount, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td width="8%">

                @{
                var gsv = Model.PromotionsDetails[i].volume * Model.PromotionsDetails[i].Product.gsv;
                @Html.DisplayFor(model => gsv, new { htmlAttributes = new { @class = "form-control" } })
                }
            </td>
            <td width="8%">
                @{
                var niv = gsv * (1 - Model.PromotionsDetails[i].discount_on) * (1 - Convert.ToDouble(Model.PromotionsDetails[i].te_on));
                //niv = @Math.Round(Convert.ToDouble(niv));
                @Html.DisplayFor(model => niv, new { htmlAttributes = new { @class = "form-control" } })
                }
            </td>
            <td width="8%">
                @{
                var nsv = Convert.ToDouble(niv) * (1 - Model.PromotionsDetails[i].discount_off) * (1 - Convert.ToDouble(Model.PromotionsDetails[i].te_off));
                @Html.DisplayFor(model => nsv, new { htmlAttributes = new { @class = "form-control" } })
                }
            </td>
            <td width="8%">
                @{
                var mmac = nsv - Model.PromotionsDetails[i].Product.pc - Model.PromotionsDetails[i].Product.cc;
                @Html.DisplayFor(model => mmac, new { htmlAttributes = new { @class = "form-control" } })
                }
            </td>
            <td width="8%">
                @Html.ActionLink("DeleteItem", "DeleteItem", new { id = Model.PromotionsDetails[i].id, promoid = Model.id } )
            </td>
        </tr>
}

    </table>


</div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

}






    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


